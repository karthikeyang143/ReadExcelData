To read an Excel file in Java, you can use a third-party library such as Apache POI or JExcel API.

Here's an example using Apache POI to read data from an Excel file:


import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Iterator;

public class ReadExcelFile {
  public static void main(String[] args) {
    try {
      FileInputStream file = new FileInputStream(new File("test.xlsx"));

      // Create workbook instance referencing the file
      XSSFWorkbook workbook = new XSSFWorkbook(file);

      // Get first/desired sheet from the workbook
      XSSFSheet sheet = workbook.getSheetAt(0);

      // Iterate through each row one by one
      Iterator<Row> rowIterator = sheet.iterator();
      while (rowIterator.hasNext()) {
        Row row = rowIterator.next();

        // For each row, iterate through all the columns
        Iterator<Cell> cellIterator = row.cellIterator();
        while (cellIterator.hasNext()) {
          Cell cell = cellIterator.next();

          // Check the cell type and format accordingly
          switch (cell.getCellType()) {
            case Cell.CELL_TYPE_NUMERIC:
              System.out.print(cell.getNumericCellValue() + " ");
              break;
            case Cell.CELL_TYPE_STRING:
              System.out.print(cell.getStringCellValue() + " ");
              break;
          }
        }
        System.out.println();
      }
      file.close();
    } catch (IOException e) {
      e.printStackTrace();
    }
  }
}
This code uses Apache POI to read data from an Excel file and print the contents to the console. 
You'll need to include the Apache POI library in your project to use this code.
Note that this example reads data from an XLSX file, but Apache POI also supports reading data from older XLS format files.
